kotlin version: 2.1.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /home/div/Karya/WaveForm/waveform/src/main/java/com/daiatech/waveform/AudioPlayer.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:107)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:90)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:54)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:27)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.cli.jvm.compiler.KotlinToJVMBytecodeCompiler.runCodegen$cli(KotlinToJVMBytecodeCompiler.kt:413)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:98)
	at org.jetbrains.kotlin.cli.pipeline.jvm.JvmBackendPipelinePhase.executePhase(JvmBackendPipelinePhase.kt:30)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:68)
	at org.jetbrains.kotlin.cli.pipeline.PipelinePhase.phaseBody(PipelinePhase.kt:58)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:28)
	at org.jetbrains.kotlin.config.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.runPhasedPipeline(AbstractCliPipeline.kt:106)
	at org.jetbrains.kotlin.cli.pipeline.AbstractCliPipeline.execute(AbstractCliPipeline.kt:65)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:61)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecutePhased(K2JVMCompiler.kt:36)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:80)
	at org.jetbrains.kotlin.cli.common.CLICompiler.exec(CLICompiler.kt:337)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:466)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:75)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:514)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:431)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:310)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:137)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:678)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1805)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:AudioPlayer visibility:public modality:FINAL <> ($receiver:androidx.compose.foundation.layout.RowScope, audioFilePath:kotlin.String, durationMs:kotlin.Long, onProgressUpdate:kotlin.Function1<kotlin.Long, kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  $receiver: VALUE_PARAMETER name:<this> type:androidx.compose.foundation.layout.RowScope
  VALUE_PARAMETER name:audioFilePath index:0 type:kotlin.String
  VALUE_PARAMETER name:durationMs index:1 type:kotlin.Long
  VALUE_PARAMETER name:onProgressUpdate index:2 type:kotlin.Function1<kotlin.Long, kotlin.Unit>
  BLOCK_BODY
    VAR name:context type:android.content.Context [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
    VAR PROPERTY_DELEGATE name:isPlaying$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (key1: kotlin.Any?, calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Boolean>
        key1: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$0 (): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
    VAR PROPERTY_DELEGATE name:progressMs$delegate type:androidx.compose.runtime.MutableLongState [val]
      CALL 'public final fun remember <T> (key1: kotlin.Any?, calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableLongState origin=null
        <T>: androidx.compose.runtime.MutableLongState
        key1: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableLongState> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$3 (): androidx.compose.runtime.MutableLongState declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Function0<androidx.compose.runtime.MutableLongState> origin=INLINE_LAMBDA reflectionTarget=null
    VAR name:exoPlayer type:androidx.media3.exoplayer.ExoPlayer [val]
      BLOCK type=androidx.media3.exoplayer.ExoPlayer origin=null
        VAR IR_TEMPORARY_VARIABLE name:tmp0 type:kotlin.Any? [val]
          CALL 'public final fun remember <T> (key1: kotlin.Any?, calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=@[EnhancedNullability] androidx.media3.exoplayer.ExoPlayer origin=null
            <T>: @[EnhancedNullability] androidx.media3.exoplayer.ExoPlayer
            key1: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
            calculation: BLOCK type=kotlin.Function0<@[EnhancedNullability] androidx.media3.exoplayer.ExoPlayer> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$6 ($context: android.content.Context): @[EnhancedNullability] androidx.media3.exoplayer.ExoPlayer declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Function0<@[EnhancedNullability] androidx.media3.exoplayer.ExoPlayer> origin=INLINE_LAMBDA reflectionTarget=null
                $context: GET_VAR 'val context: android.content.Context [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=android.content.Context origin=null
        CALL 'public final fun checkNotNullExpressionValue (value: kotlin.Any?, expression: kotlin.String): kotlin.Unit declared in kotlin.jvm.internal.Intrinsics' type=kotlin.Unit origin=null
          value: GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.Any? origin=null
          expression: CONST String type=kotlin.String value="remember(...)"
        GET_VAR 'val tmp0: kotlin.Any? [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.Any? origin=null
    VAR PROPERTY_DELEGATE name:isPaused$delegate type:androidx.compose.runtime.MutableState<kotlin.Boolean> [val]
      CALL 'public final fun remember <T> (key1: kotlin.Any?, calculation: @[DisallowComposableCalls] kotlin.Function0<T of androidx.compose.runtime.ComposablesKt.remember>): T of androidx.compose.runtime.ComposablesKt.remember [inline] declared in androidx.compose.runtime.ComposablesKt' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
        <T>: androidx.compose.runtime.MutableState<kotlin.Boolean>
        key1: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
        calculation: BLOCK type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$7 (): androidx.compose.runtime.MutableState<kotlin.Boolean> declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Function0<androidx.compose.runtime.MutableState<kotlin.Boolean>> origin=INLINE_LAMBDA reflectionTarget=null
    CALL 'public final fun DisposableEffect (key1: kotlin.Any?, effect: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult>): kotlin.Unit declared in androidx.compose.runtime.EffectsKt' type=kotlin.Unit origin=null
      key1: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
      effect: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult> origin=null
          <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult>
          dynamicCall: CALL 'public final fun invoke (p0: androidx.media3.exoplayer.ExoPlayer, p1: kotlin.Function1<kotlin.Long, kotlin.Unit>, p2: androidx.compose.runtime.MutableLongState, p3: androidx.compose.runtime.MutableState<kotlin.Boolean>, p4: androidx.compose.runtime.MutableState<kotlin.Boolean>): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.runtime.DisposableEffectScope, androidx.compose.runtime.DisposableEffectResult> origin=null
            p0: GET_VAR 'val exoPlayer: androidx.media3.exoplayer.ExoPlayer [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.media3.exoplayer.ExoPlayer origin=null
            p1: GET_VAR 'onProgressUpdate: kotlin.Function1<kotlin.Long, kotlin.Unit> declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.Function1<kotlin.Long, kotlin.Unit> origin=null
            p2: GET_VAR 'val progressMs$delegate: androidx.compose.runtime.MutableLongState [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableLongState origin=null
            p3: GET_VAR 'val isPlaying$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
            p4: GET_VAR 'val isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$11 ($exoPlayer: androidx.media3.exoplayer.ExoPlayer, $onProgressUpdate: kotlin.Function1<kotlin.Long, kotlin.Unit>, $progressMs$delegate: androidx.compose.runtime.MutableLongState, $isPlaying$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>, $isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>, $this$DisposableEffect: androidx.compose.runtime.DisposableEffectScope): androidx.compose.runtime.DisposableEffectResult declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.runtime.DisposableEffectScope): androidx.compose.runtime.DisposableEffectResult [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
    CALL 'private final fun AudioPlayer (isPlaying: kotlin.Boolean, currentPosition: kotlin.Long, durationMS: kotlin.Long, onPlay: kotlin.Function0<kotlin.Unit>, onPause: kotlin.Function0<kotlin.Unit>): kotlin.Unit declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Unit origin=null
      $receiver: GET_VAR '<this>: androidx.compose.foundation.layout.RowScope declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.foundation.layout.RowScope origin=null
      isPlaying: CALL 'private final fun AudioPlayer$lambda$1 ($isPlaying$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Boolean declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Boolean origin=GET_LOCAL_PROPERTY
        $isPlaying$delegate: GET_VAR 'val isPlaying$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
      currentPosition: CALL 'private final fun AudioPlayer$lambda$4 ($progressMs$delegate: androidx.compose.runtime.MutableLongState): kotlin.Long declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Long origin=GET_LOCAL_PROPERTY
        $progressMs$delegate: GET_VAR 'val progressMs$delegate: androidx.compose.runtime.MutableLongState [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableLongState origin=null
      durationMS: GET_VAR 'durationMs: kotlin.Long declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.Long origin=null
      onPlay: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
          <T>: kotlin.Function0<kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: kotlin.String, p1: androidx.media3.exoplayer.ExoPlayer, p2: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            p0: GET_VAR 'audioFilePath: kotlin.String declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=kotlin.String origin=null
            p1: GET_VAR 'val exoPlayer: androidx.media3.exoplayer.ExoPlayer [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.media3.exoplayer.ExoPlayer origin=null
            p2: GET_VAR 'val isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$12 ($audioFilePath: kotlin.String, $exoPlayer: androidx.media3.exoplayer.ExoPlayer, $isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Unit? declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
      onPause: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
        COMPOSITE type=kotlin.Unit origin=null
        CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
          <T>: kotlin.Function0<kotlin.Unit>
          dynamicCall: CALL 'public final fun invoke (p0: androidx.media3.exoplayer.ExoPlayer, p1: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
            p0: GET_VAR 'val exoPlayer: androidx.media3.exoplayer.ExoPlayer [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.media3.exoplayer.ExoPlayer origin=null
            p1: GET_VAR 'val isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean> [val] declared in com.daiatech.waveform.AudioPlayerKt.AudioPlayer' type=androidx.compose.runtime.MutableState<kotlin.Boolean> origin=null
          bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
            tag: CONST Int type=kotlin.Int value=6
            owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
            name: CONST String type=kotlin.String value="metafactory"
            descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
            isInterface: CONST Boolean type=kotlin.Boolean value=false
          bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
            RAW_FUNCTION_REFERENCE 'private final fun AudioPlayer$lambda$13 ($exoPlayer: androidx.media3.exoplayer.ExoPlayer, $isPaused$delegate: androidx.compose.runtime.MutableState<kotlin.Boolean>): kotlin.Unit? declared in com.daiatech.waveform.AudioPlayerKt' type=kotlin.Any
            CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:41)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:405)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:422)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:167)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateFile$lambda$18(JvmIrCodegenFactory.kt:398)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:68)
	at org.jetbrains.kotlin.config.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:215)
	at org.jetbrains.kotlin.config.phaser.NamedCompilerPhase.invoke(CompilerPhase.kt:111)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:51)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:128)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:594)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:734)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:520)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:525)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:135)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:237)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:124)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:45)
	... 52 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:128)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:97)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:92)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:42)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:50)
	... 67 more


